name: CI

on:
  push:
    branches:
    - main
    - develop
    paths-ignore:
    - 'bin/**'
    - 'manual/**'
    - '*.sh'
    - '*.md'
  pull_request:
    branches:
    - main
    - develop
    paths-ignore:
    - 'bin/**'
    - 'manual/**'
    - '*.sh'
    - '*.md'

  workflow_dispatch:

jobs:
  build_and_test:
    if: contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Test ChowMatrix on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # show all errors for each platform (vs. cancel jobs on error)
      matrix:
        include:
          - os: ubuntu-latest
            cmake_args: "-DBUILD_HEADLESS=ON"
            build_args: ""
          - os: windows-latest
            cmake_args: "-DRUN_PLUGINVAL=ON"
            build_args: "--target pluginval-all"
          - os: macos-latest
            cmake_args: "-DRUN_PLUGINVAL=ON"
            build_args: "--target pluginval-all"
    
    steps:
    - name: Install Linux Deps
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt install libasound2-dev libcurl4-openssl-dev libx11-dev libxinerama-dev libxext-dev libfreetype6-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev libjack-jackd2-dev lv2-dev
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9

    - name: Get latest CMake
      uses: lukka/get-cmake@latest

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configure
      env:
        CMAKE_ARGS: ${{ matrix.cmake_args }}
      shell: bash
      run: cmake -Bbuild $CMAKE_ARGS

    - name: Build
      env:
        BUILD_ARGS: ${{ matrix.build_args }}
      shell: bash
      run: cmake --build build --parallel 4 $BUILD_ARGS

      # - name: Setup debug session
      #   uses: mxschmitt/action-tmate@v3

    - name: Unit Tests
      if: runner.os == 'Linux'
      run: build/ChowMatrix --unit-tests --all

#    - name: Pluginval
#      if: runner.os == 'Windows' || runner.os == 'MacOS'
#      run: bash scripts/validate.sh
